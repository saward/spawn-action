name: 'saward/spawn'
description: 'Download the Spawn SQL-migration CLI and add it to PATH'

inputs:
  version:
    description: 'Release tag to install (use "latest" for newest)'
    default: 'latest'

outputs:
  version:
    description: 'The Spawn version that was installed'

runs:
  using: 'composite'
  steps:
    # 1️⃣ Resolve the version tag ("latest" → real tag_name)
    - name: Determine version
      id: resolve
      shell: bash
      run: |
        set -euo pipefail
        if [[ "${{ inputs.version }}" == "latest" ]]; then
          ver=$(curl -sfL https://api.github.com/repos/saward/spawn/releases/latest \
                | jq -r .tag_name)
        else
          ver="${{ inputs.version }}"
        fi
        echo "version=$ver" >> "$GITHUB_OUTPUT"
        echo "Spawn version → $ver"

    # 2️⃣ Map the runner platform to the correct asset suffix
    - name: Select asset target
      id: target
      shell: bash
      run: |
        case "${{ runner.os }}-${{ runner.arch }}" in
          Linux-X64)   tgt="x86_64-unknown-linux-musl"  ;;
          Linux-ARM64) tgt="aarch64-unknown-linux-musl" ;;
          *) echo "Unsupported platform: ${{ runner.os }} ${{ runner.arch }}"; exit 1 ;;
        esac
        echo "target=$tgt" >> "$GITHUB_OUTPUT"

    # 3️⃣ Download and extract the tarball
    - name: Download Spawn ${{ steps.resolve.outputs.version }}
      shell: bash
      run: |
        set -euo pipefail
        ver=${{ steps.resolve.outputs.version }}
        tgt=${{ steps.target.outputs.target }}
        asset="spawn-${ver}-${tgt}.tar.gz"
        url="https://github.com/saward/spawn/releases/download/${ver}/${asset}"
        echo "Fetching $url"
        curl -sLf -o "$asset" "$url"
        tar -xzf "$asset"
        chmod +x spawn
        echo "$PWD" >> "$GITHUB_PATH"   # add to PATH

    # 4️⃣ Log installed version
    - name: Done
      shell: bash
      run: echo "::notice title=Spawn::Installed version ${{ steps.resolve.outputs.version }}"
